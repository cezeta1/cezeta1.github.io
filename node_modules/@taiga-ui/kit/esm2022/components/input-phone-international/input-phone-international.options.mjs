import { tuiCreateToken, tuiProvideOptions } from '@taiga-ui/cdk/utils/miscellaneous';
import { of } from 'rxjs';
export const TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS = {
    countries: [],
    countryIsoCode: 'RU',
    metadata: of({ countries: {}, country_calling_codes: {} }),
    separator: '-',
};
/**
 * Default parameters for input phone international component
 */
export const TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS = tuiCreateToken(TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS);
export function tuiInputPhoneInternationalOptionsProvider(options) {
    return tuiProvideOptions(TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS, options, TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtcGhvbmUtaW50ZXJuYXRpb25hbC5vcHRpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvaW5wdXQtcGhvbmUtaW50ZXJuYXRpb25hbC9pbnB1dC1waG9uZS1pbnRlcm5hdGlvbmFsLm9wdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFDLGNBQWMsRUFBRSxpQkFBaUIsRUFBQyxNQUFNLG1DQUFtQyxDQUFDO0FBSXBGLE9BQU8sRUFBQyxFQUFFLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFTeEIsTUFBTSxDQUFDLE1BQU0sNkNBQTZDLEdBQ3REO0lBQ0ksU0FBUyxFQUFFLEVBQUU7SUFDYixjQUFjLEVBQUUsSUFBSTtJQUNwQixRQUFRLEVBQUUsRUFBRSxDQUFDLEVBQUMsU0FBUyxFQUFFLEVBQUUsRUFBRSxxQkFBcUIsRUFBRSxFQUFFLEVBQUMsQ0FBQztJQUN4RCxTQUFTLEVBQUUsR0FBRztDQUNqQixDQUFDO0FBRU47O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxxQ0FBcUMsR0FBRyxjQUFjLENBQy9ELDZDQUE2QyxDQUNoRCxDQUFDO0FBRUYsTUFBTSxVQUFVLHlDQUF5QyxDQUNyRCxPQUFtRDtJQUVuRCxPQUFPLGlCQUFpQixDQUNwQixxQ0FBcUMsRUFDckMsT0FBTyxFQUNQLDZDQUE2QyxDQUNoRCxDQUFDO0FBQ04sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHtQcm92aWRlcn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge3R1aUNyZWF0ZVRva2VuLCB0dWlQcm92aWRlT3B0aW9uc30gZnJvbSAnQHRhaWdhLXVpL2Nkay91dGlscy9taXNjZWxsYW5lb3VzJztcbmltcG9ydCB0eXBlIHtUdWlDb3VudHJ5SXNvQ29kZX0gZnJvbSAnQHRhaWdhLXVpL2kxOG4vdHlwZXMnO1xuaW1wb3J0IHR5cGUge01ldGFkYXRhSnNvbn0gZnJvbSAnbGlicGhvbmVudW1iZXItanMvY29yZSc7XG5pbXBvcnQgdHlwZSB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge29mfSBmcm9tICdyeGpzJztcblxuZXhwb3J0IGludGVyZmFjZSBUdWlJbnB1dFBob25lSW50ZXJuYXRpb25hbE9wdGlvbnMge1xuICAgIHJlYWRvbmx5IGNvdW50cmllczogcmVhZG9ubHkgVHVpQ291bnRyeUlzb0NvZGVbXTtcbiAgICByZWFkb25seSBjb3VudHJ5SXNvQ29kZTogVHVpQ291bnRyeUlzb0NvZGU7XG4gICAgcmVhZG9ubHkgbWV0YWRhdGE6IE9ic2VydmFibGU8TWV0YWRhdGFKc29uPiB8IFByb21pc2U8TWV0YWRhdGFKc29uPjtcbiAgICByZWFkb25seSBzZXBhcmF0b3I6IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0IFRVSV9JTlBVVF9QSE9ORV9JTlRFUk5BVElPTkFMX0RFRkFVTFRfT1BUSU9OUzogVHVpSW5wdXRQaG9uZUludGVybmF0aW9uYWxPcHRpb25zID1cbiAgICB7XG4gICAgICAgIGNvdW50cmllczogW10sXG4gICAgICAgIGNvdW50cnlJc29Db2RlOiAnUlUnLFxuICAgICAgICBtZXRhZGF0YTogb2Yoe2NvdW50cmllczoge30sIGNvdW50cnlfY2FsbGluZ19jb2Rlczoge319KSxcbiAgICAgICAgc2VwYXJhdG9yOiAnLScsXG4gICAgfTtcblxuLyoqXG4gKiBEZWZhdWx0IHBhcmFtZXRlcnMgZm9yIGlucHV0IHBob25lIGludGVybmF0aW9uYWwgY29tcG9uZW50XG4gKi9cbmV4cG9ydCBjb25zdCBUVUlfSU5QVVRfUEhPTkVfSU5URVJOQVRJT05BTF9PUFRJT05TID0gdHVpQ3JlYXRlVG9rZW4oXG4gICAgVFVJX0lOUFVUX1BIT05FX0lOVEVSTkFUSU9OQUxfREVGQVVMVF9PUFRJT05TLFxuKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHR1aUlucHV0UGhvbmVJbnRlcm5hdGlvbmFsT3B0aW9uc1Byb3ZpZGVyKFxuICAgIG9wdGlvbnM6IFBhcnRpYWw8VHVpSW5wdXRQaG9uZUludGVybmF0aW9uYWxPcHRpb25zPixcbik6IFByb3ZpZGVyIHtcbiAgICByZXR1cm4gdHVpUHJvdmlkZU9wdGlvbnMoXG4gICAgICAgIFRVSV9JTlBVVF9QSE9ORV9JTlRFUk5BVElPTkFMX09QVElPTlMsXG4gICAgICAgIG9wdGlvbnMsXG4gICAgICAgIFRVSV9JTlBVVF9QSE9ORV9JTlRFUk5BVElPTkFMX0RFRkFVTFRfT1BUSU9OUyxcbiAgICApO1xufVxuIl19