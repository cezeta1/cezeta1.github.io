{"version":3,"file":"taiga-ui-kit-components-input-pin.mjs","sources":["../../../projects/kit/components/input-pin/input-pin.component.ts","../../../projects/kit/components/input-pin/input-pin.template.html","../../../projects/kit/components/input-pin/taiga-ui-kit-components-input-pin.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    Component,\n    computed,\n    inject,\n    Input,\n    signal,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {MaskitoDirective} from '@maskito/angular';\nimport type {MaskitoMask} from '@maskito/core';\nimport {TuiRepeatTimes} from '@taiga-ui/cdk/directives/repeat-times';\nimport {tuiInjectElement} from '@taiga-ui/cdk/utils/dom';\nimport {tuiIsNativeFocused} from '@taiga-ui/cdk/utils/focus';\nimport {tuiIsString} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {\n    TUI_TEXTFIELD_OPTIONS,\n    TuiTextfieldContent,\n} from '@taiga-ui/core/components/textfield';\nimport {TuiAppearance} from '@taiga-ui/core/directives/appearance';\nimport {tuiMaskito} from '@taiga-ui/kit/utils';\n\n@Component({\n    standalone: true,\n    selector: 'input[tuiInputPin]',\n    imports: [TuiAppearance, TuiRepeatTimes, TuiTextfieldContent],\n    templateUrl: './input-pin.template.html',\n    styleUrls: ['./input-pin.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    hostDirectives: [MaskitoDirective],\n    host: {\n        inputmode: 'numeric',\n        spellcheck: 'false',\n        '(selectionchange)': 'onSelection()',\n        '(keydown.arrowLeft)': 'onArrow()',\n    },\n})\nexport class TuiInputPin {\n    protected readonly el = tuiInjectElement<HTMLInputElement>();\n    protected readonly mask = signal<MaskitoMask>(/^\\d+$/);\n    protected readonly appearance = inject(TUI_TEXTFIELD_OPTIONS).appearance;\n    protected readonly control = inject(NgControl);\n\n    protected readonly maskito = tuiMaskito(\n        computed(() => ({\n            mask: this.mask(),\n            overwriteMode: 'replace',\n        })),\n    );\n\n    @Input('mask')\n    public set maskSetter(mask: MaskitoMask | string) {\n        this.mask.set(tuiIsString(mask) ? new RegExp(mask) : mask);\n    }\n\n    public onClick(index: number): void {\n        this.el.focus();\n        this.el.setSelectionRange(index, index + 1);\n    }\n\n    public onSelection(): void {\n        if (this.el.selectionStart === this.el.maxLength) {\n            this.el.setSelectionRange(this.el.maxLength - 1, this.el.maxLength);\n        }\n    }\n\n    public onArrow(): void {\n        if (\n            this.el.selectionStart === this.el.maxLength - 1 &&\n            this.el.selectionEnd === this.el.maxLength\n        ) {\n            this.el.setSelectionRange(this.el.maxLength - 2, this.el.maxLength - 2);\n        }\n    }\n\n    public isFocused(index: number): boolean {\n        return (\n            tuiIsNativeFocused(this.el) &&\n            (this.el.selectionStart === index ||\n                (this.el.selectionStart === this.el.maxLength &&\n                    index === this.el.maxLength - 1))\n        );\n    }\n}\n","<div\n    *tuiTextfieldContent\n    class=\"t-wrapper\"\n>\n    <label\n        *tuiRepeatTimes=\"let index of el.maxLength\"\n        class=\"t-item\"\n        [tuiAppearance]=\"appearance()\"\n        [tuiAppearanceFocus]=\"isFocused(index)\"\n        [tuiAppearanceMode]=\"control.invalid && control.touched ? 'invalid' : null\"\n        (mousedown.prevent)=\"onClick(index)\"\n    >\n        <span\n            class=\"t-value\"\n            [class.t-value_filled]=\"el.value[index]\"\n            [textContent]=\"el.value[index] || el.placeholder[index]\"\n        ></span>\n    </label>\n</div>\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}