import { NgControl } from '@angular/forms';
import type { MaskitoMask } from '@maskito/core';
import * as i0 from "@angular/core";
import * as i1 from "@maskito/angular";
export declare class TuiInputPin {
    protected readonly el: HTMLInputElement;
    protected readonly mask: import("@angular/core").WritableSignal<MaskitoMask>;
    protected readonly appearance: import("@angular/core").WritableSignal<string>;
    protected readonly control: NgControl;
    protected readonly maskito: import("@angular/core").Signal<import("@maskito/core").MaskitoOptions | null>;
    set maskSetter(mask: MaskitoMask | string);
    onClick(index: number): void;
    onSelection(): void;
    onArrow(): void;
    isFocused(index: number): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiInputPin, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiInputPin, "input[tuiInputPin]", never, { "maskSetter": { "alias": "mask"; "required": false; }; }, {}, never, never, true, [{ directive: typeof i1.MaskitoDirective; inputs: {}; outputs: {}; }]>;
}
